// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AssetsColumns holds the columns for the "assets" table.
	AssetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "asset_type", Type: field.TypeEnum, Enums: []string{"chart", "insight", "audience"}},
		{Name: "description", Type: field.TypeString},
		{Name: "payload", Type: field.TypeJSON, SchemaType: map[string]string{"postgres": "jsonb"}},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AssetsTable holds the schema information for the "assets" table.
	AssetsTable = &schema.Table{
		Name:       "assets",
		Columns:    AssetsColumns,
		PrimaryKey: []*schema.Column{AssetsColumns[0]},
	}
	// FavouritesColumns holds the columns for the "favourites" table.
	FavouritesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "asset_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// FavouritesTable holds the schema information for the "favourites" table.
	FavouritesTable = &schema.Table{
		Name:       "favourites",
		Columns:    FavouritesColumns,
		PrimaryKey: []*schema.Column{FavouritesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "favourites_assets_favourites",
				Columns:    []*schema.Column{FavouritesColumns[2]},
				RefColumns: []*schema.Column{AssetsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "favourites_users_favourites",
				Columns:    []*schema.Column{FavouritesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "favourite_user_id_asset_id",
				Unique:  true,
				Columns: []*schema.Column{FavouritesColumns[3], FavouritesColumns[2]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AssetsTable,
		FavouritesTable,
		UsersTable,
	}
)

func init() {
	FavouritesTable.ForeignKeys[0].RefTable = AssetsTable
	FavouritesTable.ForeignKeys[1].RefTable = UsersTable
}
