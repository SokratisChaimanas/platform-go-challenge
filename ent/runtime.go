// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/SokratisChaimanas/platform-go-challenge/ent/asset"
	"github.com/SokratisChaimanas/platform-go-challenge/ent/favourite"
	"github.com/SokratisChaimanas/platform-go-challenge/ent/schema"
	"github.com/SokratisChaimanas/platform-go-challenge/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	assetFields := schema.Asset{}.Fields()
	_ = assetFields
	// assetDescDescription is the schema descriptor for description field.
	assetDescDescription := assetFields[2].Descriptor()
	// asset.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	asset.DescriptionValidator = assetDescDescription.Validators[0].(func(string) error)
	// assetDescCreatedAt is the schema descriptor for created_at field.
	assetDescCreatedAt := assetFields[4].Descriptor()
	// asset.DefaultCreatedAt holds the default value on creation for the created_at field.
	asset.DefaultCreatedAt = assetDescCreatedAt.Default.(func() time.Time)
	// assetDescID is the schema descriptor for id field.
	assetDescID := assetFields[0].Descriptor()
	// asset.DefaultID holds the default value on creation for the id field.
	asset.DefaultID = assetDescID.Default.(func() uuid.UUID)
	favouriteFields := schema.Favourite{}.Fields()
	_ = favouriteFields
	// favouriteDescCreatedAt is the schema descriptor for created_at field.
	favouriteDescCreatedAt := favouriteFields[3].Descriptor()
	// favourite.DefaultCreatedAt holds the default value on creation for the created_at field.
	favourite.DefaultCreatedAt = favouriteDescCreatedAt.Default.(func() time.Time)
	// favouriteDescID is the schema descriptor for id field.
	favouriteDescID := favouriteFields[0].Descriptor()
	// favourite.DefaultID holds the default value on creation for the id field.
	favourite.DefaultID = favouriteDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
